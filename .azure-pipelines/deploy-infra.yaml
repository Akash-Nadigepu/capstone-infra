trigger: none

stages:
- stage: Plan
  displayName: 'Terraform Plan Stage'
  jobs:
  - job: TerraformPlan
    displayName: 'Terraform Plan'
    pool:
      name: Default
    variables:
      TF_WORKING_DIR: 'environments/primary'
    steps:
    - script: terraform -version
      displayName: 'Verify Terraform version'
      env:
        TF_VAR_client_id: $(ARM_CLIENT_ID)
        TF_VAR_client_secret: $(ARM_CLIENT_SECRET)
        TF_VAR_subscription_id: $(ARM_SUBSCRIPTION_ID)
        TF_VAR_tenant_id: $(ARM_TENANT_ID)

    - script: |
        cd $(TF_WORKING_DIR)
        terraform init
      displayName: 'Terraform Init'
      env:
        TF_VAR_client_id: $(ARM_CLIENT_ID)
        TF_VAR_client_secret: $(ARM_CLIENT_SECRET)
        TF_VAR_subscription_id: $(ARM_SUBSCRIPTION_ID)
        TF_VAR_tenant_id: $(ARM_TENANT_ID)

    - script: |
        cd $(TF_WORKING_DIR)
        terraform plan -out=tfplan
      displayName: 'Terraform Plan'
      env:
        TF_VAR_client_id: $(ARM_CLIENT_ID)
        TF_VAR_client_secret: $(ARM_CLIENT_SECRET)
        TF_VAR_subscription_id: $(ARM_SUBSCRIPTION_ID)
        TF_VAR_tenant_id: $(ARM_TENANT_ID)

- stage: Apply
  displayName: 'Terraform Apply Stage'
  dependsOn: Plan
  condition: succeeded()

  jobs:
  - job: TerraformApply
    displayName: 'Apply Plan with Approval'
    pool:
      name: Default
    steps:

    - script: |
        cd environments/primary
        terraform apply tfplan
      displayName: 'Terraform Apply'
      env:
        TF_VAR_client_id: $(ARM_CLIENT_ID)
        TF_VAR_client_secret: $(ARM_CLIENT_SECRET)
        TF_VAR_subscription_id: $(ARM_SUBSCRIPTION_ID)
        TF_VAR_tenant_id: $(ARM_TENANT_ID)
